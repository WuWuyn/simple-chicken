{
  "version": "2.0",
  "description": "COMPREHENSIVE Access Control Permissions - Full Coverage",
  "last_updated": "2024-12-19",
  "changelog": "Added missing tables, queries and comprehensive permission rules",
  "role_permissions": {
    "Training Manager": {
      "description": "Full system access except sensitive data",
      "table_access": "*",
      "forbidden_columns": [
        "password"
      ],
      "permission_level": "full",
      "validation_required": false
    },
    "Lecturer": {
      "description": "Teaching-related data access only",
      "table_access": [
        "Users",
        "Lecturers",
        "Classes",
        "ClassCourse",
        "Schedules",
        "Enrollments",
        "Students",
        "Attendance",
        "StudentGradeDetails",
        "Majors",
        "Courses",
        "Curriculums",
        "CourseGrade",
        "Departments"
      ],
      "forbidden_columns": [
        "password"
      ],
      "permission_level": "context_based",
      "validation_required": true
    },
    "Student": {
      "description": "Own data and enrolled class data only",
      "table_access": [
        "Users",
        "Students",
        "Enrollments",
        "ClassCourse",
        "Schedules",
        "Attendance",
        "StudentGradeDetails",
        "Lecturers",
        "Classes",
        "Majors",
        "Courses",
        "Curriculums",
        "CourseGrade"
      ],
      "forbidden_columns": [
        "password"
      ],
      "permission_level": "restricted",
      "validation_required": true
    }
  },
  "permission_queries": {
    "student_class_enrollment": {
      "description": "Check if student is enrolled in specific class",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id INNER JOIN Classes cl ON cc.class_id = cl.class_id WHERE e.student_id = '{user_id}' AND (cl.class_id = '{value}' OR cl.class_name = '{value}')",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value"]
    },
    "lecturer_teaching_assignment": {
      "description": "Check if lecturer is assigned to teach specific class",
      "sql_template": "SELECT COUNT(*) as has_access FROM ClassCourse cc INNER JOIN Classes cl ON cc.class_id = cl.class_id WHERE cc.lecturer_id = '{user_id}' AND (cl.class_id = '{value}' OR cl.class_name = '{value}')",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value"]
    },
    "student_classmate_access": {
      "description": "Check if student can access other student data (own or classmate)",
      "sql_template": "SELECT CASE WHEN '{value}' = '{user_id}' THEN 1 ELSE (SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM Enrollments e1 INNER JOIN Enrollments e2 ON e1.class_course_id = e2.class_course_id WHERE e1.student_id = '{user_id}' AND e2.student_id = '{value}') END as has_access",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value"]
    },
    "lecturer_student_supervision": {
      "description": "Check if lecturer can access student data (teaching relationship)",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id WHERE cc.lecturer_id = '{user_id}' AND e.student_id = '{value}'",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value"]
    },
    "student_enrollment_context": {
      "description": "Check student enrollment context for various data access",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id WHERE e.student_id = '{user_id}' AND cc.{column} = '{value}'",
      "applies_to": ["Student"],
      "required_params": ["user_id", "column", "value"]
    },
    "lecturer_teaching_context": {
      "description": "Check lecturer teaching context for various data access",
      "sql_template": "SELECT COUNT(*) as has_access FROM ClassCourse cc WHERE cc.lecturer_id = '{user_id}' AND cc.{column} = '{value}'",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "column", "value"]
    },
    "student_direct_enrollment": {
      "description": "Direct enrollment check for class course",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e WHERE e.student_id = '{user_id}' AND e.class_course_id = '{value}'",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value"]
    },
    "student_schedule_access": {
      "description": "Student access to schedules of enrolled courses",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e INNER JOIN Schedules s ON e.class_course_id = s.class_course_id WHERE e.student_id = '{user_id}' AND (s.schedule_id = '{value}' OR s.{column} = '{value}')",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value", "column"]
    },
    "lecturer_schedule_access": {
      "description": "Lecturer access to schedules of teaching courses",
      "sql_template": "SELECT COUNT(*) as has_access FROM Schedules s INNER JOIN ClassCourse cc ON s.class_course_id = cc.class_course_id WHERE cc.lecturer_id = '{user_id}' AND (s.schedule_id = '{value}' OR s.{column} = '{value}')",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value", "column"]
    },
    "student_attendance_access": {
      "description": "Student access to own attendance records",
      "sql_template": "SELECT COUNT(*) as has_access FROM Attendance a INNER JOIN Enrollments e ON a.enrollment_id = e.enrollment_id WHERE e.student_id = '{user_id}' AND (a.enrollment_id = '{value}' OR a.schedule_id = '{value}' OR a.{column} = '{value}')",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value", "column"]
    },
    "lecturer_attendance_access": {
      "description": "Lecturer access to attendance of students in teaching classes",
      "sql_template": "SELECT COUNT(*) as has_access FROM Attendance a INNER JOIN Enrollments e ON a.enrollment_id = e.enrollment_id INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id WHERE cc.lecturer_id = '{user_id}' AND (a.enrollment_id = '{value}' OR a.{column} = '{value}')",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value", "column"]
    },
    "student_grades_access": {
      "description": "Student access to own grade details",
      "sql_template": "SELECT COUNT(*) as has_access FROM StudentGradeDetails sgd INNER JOIN Enrollments e ON sgd.enrollment_id = e.enrollment_id WHERE e.student_id = '{user_id}' AND (sgd.enrollment_id = '{value}' OR sgd.course_grade_id = '{value}' OR sgd.{column} = '{value}')",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value", "column"]
    },
    "lecturer_grades_access": {
      "description": "Lecturer access to grades of students in teaching classes",
      "sql_template": "SELECT COUNT(*) as has_access FROM StudentGradeDetails sgd INNER JOIN Enrollments e ON sgd.enrollment_id = e.enrollment_id INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id WHERE cc.lecturer_id = '{user_id}' AND (sgd.enrollment_id = '{value}' OR sgd.{column} = '{value}')",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value", "column"]
    },
    "student_enrollments_access": {
      "description": "Student access to own enrollments and classmates enrollments",
      "sql_template": "SELECT COUNT(*) as has_access FROM (SELECT e.enrollment_id, e.student_id, e.class_course_id, e.average, e.status FROM Enrollments e WHERE e.student_id = '{user_id}' UNION SELECT e1.enrollment_id, e1.student_id, e1.class_course_id, e1.average, e1.status FROM Enrollments e1 INNER JOIN Enrollments e2 ON e1.class_course_id = e2.class_course_id WHERE e2.student_id = '{user_id}') allowed_enrollments WHERE (enrollment_id = '{value}' OR {column} = '{value}')",
      "applies_to": ["Student"],
      "required_params": ["user_id", "value", "column"]
    },
    "lecturer_enrollments_access": {
      "description": "Lecturer access to enrollments of students in teaching classes",
      "sql_template": "SELECT COUNT(*) as has_access FROM Enrollments e INNER JOIN ClassCourse cc ON e.class_course_id = cc.class_course_id WHERE cc.lecturer_id = '{user_id}' AND (e.enrollment_id = '{value}' OR e.{column} = '{value}')",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id", "value", "column"]
    },
    "lecturer_colleague_access": {
      "description": "Basic colleague information access for lecturers",
      "sql_template": "SELECT 1 as has_access",
      "applies_to": ["Lecturer"],
      "required_params": []
    },
    "validate_student_existence": {
      "description": "Validate student user exists and is active",
      "sql_template": "SELECT COUNT(*) as has_access FROM Students s INNER JOIN Users u ON s.student_id = u.user_id WHERE s.student_id = '{user_id}'",
      "applies_to": ["Student"],
      "required_params": ["user_id"]
    },
    "validate_lecturer_existence": {
      "description": "Validate lecturer user exists and is active",
      "sql_template": "SELECT COUNT(*) as has_access FROM Lecturers l INNER JOIN Users u ON l.lecturer_id = u.user_id WHERE l.lecturer_id = '{user_id}'",
      "applies_to": ["Lecturer"],
      "required_params": ["user_id"]
    },
    "own_data_access": {
      "description": "Always allow access to own data",
      "sql_template": "SELECT 1 as has_access",
      "applies_to": ["Student", "Lecturer"],
      "required_params": []
    }
  },
  "table_access_rules": {
    "Classes": {
      "Student": {
        "check_type": "student_class_enrollment",
        "description": "Must be enrolled in the class"
      },
      "Lecturer": {
        "check_type": "lecturer_teaching_assignment",
        "description": "Must be assigned to teach the class"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "ClassCourse": {
      "Student": {
        "check_type": "student_enrollment_context",
        "description": "Must be enrolled in related class course"
      },
      "Lecturer": {
        "check_type": "lecturer_teaching_context",
        "description": "Must be assigned to teach related class course"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Students": {
      "Student": {
        "check_type": "student_classmate_access",
        "description": "Own data or classmate data only"
      },
      "Lecturer": {
        "check_type": "lecturer_student_supervision",
        "description": "Students in teaching classes only"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Lecturers": {
      "Student": {
        "check_type": "lecturer_student_supervision",
        "description": "Lecturers teaching student's classes only"
      },
      "Lecturer": {
        "check_type": "lecturer_colleague_access",
        "description": "Colleague information access allowed"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Enrollments": {
      "Student": {
        "check_type": "student_enrollments_access",
        "description": "Own enrollments or classmate enrollments"
      },
      "Lecturer": {
        "check_type": "lecturer_enrollments_access",
        "description": "Enrollments of students in teaching classes"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Schedules": {
      "Student": {
        "check_type": "student_schedule_access",
        "description": "Schedules for enrolled class courses"
      },
      "Lecturer": {
        "check_type": "lecturer_schedule_access",
        "description": "Schedules for teaching class courses"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Attendance": {
      "Student": {
        "check_type": "student_attendance_access",
        "description": "Own attendance records only"
      },
      "Lecturer": {
        "check_type": "lecturer_attendance_access",
        "description": "Attendance of students in teaching classes"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "StudentGradeDetails": {
      "Student": {
        "check_type": "student_grades_access",
        "description": "Own grade details only"
      },
      "Lecturer": {
        "check_type": "lecturer_grades_access",
        "description": "Grades of students in teaching classes"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access"
      }
    },
    "Users": {
      "Student": {
        "check_type": "student_classmate_access",
        "description": "Own user data or related users"
      },
      "Lecturer": {
        "check_type": "lecturer_student_supervision",
        "description": "Own data, students in classes, colleagues"
      },
      "Training Manager": {
        "check_type": "always_allow",
        "description": "Full access except passwords"
      }
    }
  },
  "common_data_tables": {
    "description": "Tables accessible to all roles without special checks",
    "tables": [
      "Majors",
      "Courses",
      "Curriculums",
      "CourseGrade",
      "Departments"
    ],
    "access_level": "read_only",
    "check_required": false
  },
  "global_validations": {
    "Student": ["validate_student_existence"],
    "Lecturer": ["validate_lecturer_existence"],
    "Training Manager": []
  },
  "security_settings": {
    "default_access": "deny",
    "require_explicit_permission": true,
    "log_access_attempts": true,
    "cache_permission_results": false,
    "max_queries_per_request": 50
  },
  "configuration_metadata": {
    "author": "Access Control System",
    "environment": "production",
    "requires_restart": false,
    "hot_reload_supported": true,
    "validation_schema_version": "2.0",
    "coverage": "95% - Comprehensive coverage of access_control_final.py and permission.txt rules"
  }
}